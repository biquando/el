// [Boot]
//   Boot the kernel.

.global $_BOOT_GL
nop $_BOOT_ID

$_guard
    load # ha 0
    load * hb *$guard_flag
    mod ha ? hb
    cond e
        GOTO $_main
    sig out *$guard_msg 0
    sig abort 0
    $guard_msg STR "ERROR: Attempted to access boot\n"
    $guard_flag RAW 00

$_main
    sig out *$welcome_msg 0
    load # hx 1
    store * hx *$guard_flag
    load # rsp $_STACK

    // Verify [Spawn]
    load # rx $_SPAWN_ID
    PSH rx
    load # rx $_SPAWN_GL
    PSH rx
    CALL $_verify
    load # ra 0
    mod ra ? rx
    cond ne
        GOTO $verify_fail

    // Verify [Term]
    load # rx $_TERM_ID
    PSH rx
    load # rx $_TERM_GL
    PSH rx
    CALL $_verify
    load # ra 0
    mod ra ? rx
    cond ne
        GOTO $verify_fail

    // Verify [GetLocal]
    load # rx $_GET_LOCAL_ID
    PSH rx
    load # rx $_GET_LOCAL_GL
    PSH rx
    CALL $_verify
    load # ra 0
    mod ra ? rx
    cond ne
        GOTO $verify_fail

    GOTO $verify_success
    $verify_fail
        sig out *$verify_fail_msg 0
        PSH rx
        TRA rar rsp
        sig out 5
        sig abort 2
    $verify_success
    sig out *$verify_success_msg 0

    // Initiate root process
    load # rar $_GL_SPACE_HEAD
    load # rx 2
    store * rx
    load # ra $_MAX_PROC_DEPTH
    mod ra + ra
    mod ra + rar
    mod ra + rx
    store + ra
    load + rar
    load # rb 4
    store * rb
    store + rsp
    sig out *$init_root_proc_msg 0


    // (test_proc.l)
    load # rsp $_STACK
    load # rx 5
    PSH rx
    load # rx 11
    PSH rx
    load # rx $TEST_PROC_L_GL
    PSH rx
    CALL $_SPAWN_GL
    TRA rar rx
    sig out 0
    sig out *$newline 0

    sig abort 1

// Verify that a routine was loaded into memory.
// Args:
//   1. addr  address of the routine
//   2. id    16-bit identifier of the routine
// Returns:
//   0 if success, 'id' if failure
$_verify
    // 'addr' -> ra, 'id' -> rb
    load # rar 2
    mod rar + rsp
    load * ra
    INC rar
    load * rb
    TRA rx rb
    TRA rar ra

    // Verify 'addr' matches <Global> tag of routine
    mod rar ++
    load * rc
    mod ra ? rc
    cond ne
        GOTO $_verify_return

    // Verify 'id' matches id tag of routine
    mod rar ++
    mod rar ++
    mod rar ++
    load * rc
    mod rb ? rc
    cond ne
        GOTO $_verify_return

    // Both tags matched
    load # rx 0

    $_verify_return
        RET

$_data
    $welcome_msg         STR "Booting...\n"
    $verify_success_msg  STR "Verification succeeded.\n"
    $verify_fail_msg     STR "Verification failed, id="
    $init_root_proc_msg  STR "Initiated root process.\n"
    $newline             STR "\n"
